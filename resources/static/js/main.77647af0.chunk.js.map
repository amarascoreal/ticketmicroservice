{"version":3,"sources":["auth/KeycloakContext.js","i18n/locales/index.js","i18n/i18next.js","i18n/setLocale.js","i18n/constants.js","i18n/yup.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","components/__types__/keycloak.js","components/__types__/ref.js","auth/withKeycloak.js","auth/KeycloakViews.js","api/helpers.js","api/tickets.js","components/common/Notification.js","components/__types__/ticket.js","i18n/dateFnsLocales.js","components/common/ConfirmationDialogTrigger.js","components/TicketForm.js","components/TicketEditFormContainer.js","components/TicketAddFormContainer.js","custom-elements/TicketFormElement.js"],"names":["KeycloakContext","React","createContext","en","resources","Object","keys","locales","reduce","acc","lang","translateFn","i18next","t","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","yupLocale","mixed","required","path","field","Yup","setYupLocale","createWidgetEventPublisher","eventType","payload","widgetEvent","CustomEvent","detail","window","dispatchEvent","publishWidgetEvent","INPUT_EVENT_TYPES","tableAdd","tableSelect","OUTPUT_EVENT_TYPES","create","update","errorCreate","errorUpdate","PropTypes","shape","initialized","bool","authenticated","oneOfType","func","current","elementType","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","AuthenticatedView","children","UnauthenticatedView","getDefaultOptions","headers","Headers","Authorization","entando","token","request","url","options","a","fetch","response","status","json","Promise","reject","Error","statusText","apiTicketGet","serviceUrl","id","method","apiTicketPost","ticket","body","JSON","stringify","apiTicketPut","apiTicketDelete","statusIcon","success","CheckCircleIcon","error","ErrorIcon","info","InfoIcon","autoHideDurations","Notification","className","classes","passedStatus","message","onClose","isOpen","INFO","Icon","autoHideDuration","messageTemplate","clsx","icon","iconStatus","Snackbar","open","SnackbarContent","action","IconButton","key","aria-label","color","onClick","SUCCESS","ERROR","withStyles","theme","display","alignItems","fontSize","opacity","marginRight","spacing","backgroundColor","green","palette","dark","primary","main","withTheme","number","code","string","timestamp","price","instanceOf","Date","enLocale","ConfirmationDialogTrigger","state","handleOpen","bind","discard","confirm","setState","onCloseDialog","handleClose","DISCARD","CONFIRM","dialog","title","description","confirmLabel","discardLabel","Renderer","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","PureComponent","TicketForm","handleConfirmationDialogAction","onDelete","values","touched","errors","handleChange","handleBlur","formikHandleSubmit","handleSubmit","onCancelEditing","isSubmitting","setFieldValue","i18n","getHelperText","utils","DateFnsUtils","dateFnsLocales","language","onSubmit","e","stopPropagation","root","data-testid","Grid","container","item","xs","sm","TextField","helperText","textField","onChange","onBlur","name","label","DateTimePicker","labelFunc","date","toLocaleString","type","disabled","emptyTicket","formikBag","mapPropsToValues","enableReinitialize","validationSchema","nullable","setSubmitting","displayName","compose","margin","width","withTranslation","withFormik","TicketEditFormContainer","notificationMessage","notificationStatus","closeNotification","handleDelete","fetchData","prevProps","changedAuth","changedId","handleError","onUpdate","updatedTicket","err","onError","form","TicketAddFormContainer","onCreate","createdTicket","getKeycloakInstance","ATTRIBUTES","hidden","disableDefaultEventHandler","TicketFormElement","cancelEditing","delete","onErrorCreate","onErrorUpdate","oldValue","newValue","includes","onToggleDisableDefaultEvent","render","document","createElement","mountPoint","appendChild","eventHandler","shadowRoot","attachShadow","mode","jss","jssCreate","jssPreset","insertionPoint","muiTheme","createMuiTheme","MuiDialog","MuiPopover","unsubscribeFromKeycloakEvent","addEventListener","removeEventListener","retargetEvents","unsubscribeFromWidgetEvents","evt","edit","performDelete","setAttribute","widgetEvents","disableEventHandler","getAttribute","defaultEventHandlerDisabled","defaultWidgetEventHandler","forEach","ReactDOM","setLocale","FormContainer","Provider","StylesProvider","ThemeProvider","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.77647af0.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import en from 'i18n/locales/en.json';\n\nexport default {\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace to the locales\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setYupLocale } from 'i18n/yup';\nimport { translateFn, setI18nextLocale } from 'i18n/i18next';\n\nexport default (locale) => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n  setYupLocale(translateFn);\n};\n","export const DEFAULT_LOCALE = 'en'; // eslint-disable-line import/prefer-default-export\n","import * as Yup from 'yup';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const setYupLocale = (translateFn) => {\n  const yupLocale = {\n    mixed: {\n      required: ({ path }) =>\n        translateFn('validation.required', { field: translateFn(`entities.ticket.${path}`) }),\n    },\n  };\n  Yup.setLocale(yupLocale);\n};\n","export const publishWidgetEvent = (eventType, payload) => {\n  const widgetEvent = new CustomEvent(eventType, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = (eventType) => (payload) =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach((eventType) => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach((eventType) => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = (widgetEvent) => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n  tableAdd: 'ticket.table.add',\n  tableSelect: 'ticket.table.select',\n};\n\nexport const OUTPUT_EVENT_TYPES = {\n  create: 'ticket.form.create',\n  update: 'ticket.form.update',\n  errorCreate: 'ticket.form.errorCreate',\n  errorUpdate: 'ticket.form.errorUpdate',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from 'components/__types__/ref';\nimport KeycloakContext from 'auth/KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = (value) => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  if (response.status === 204) {\n    return {};\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? response.json()\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request } from 'api/helpers';\n\nconst resource = 'tickets';\n\nexport const apiTicketGet = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiTicketPost = async (serviceUrl, ticket) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiTicketPut = async (serviceUrl, ticket) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiTicketDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconStatus: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nconst statusIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst autoHideDurations = {\n  success: 3000,\n  error: null,\n  info: 5000,\n};\n\nconst Notification = ({ className, classes, status: passedStatus, message, onClose }) => {\n  const isOpen = !!message;\n\n  const status = passedStatus || Notification.INFO;\n  const Icon = statusIcon[status];\n  const autoHideDuration = autoHideDurations[status];\n\n  const messageTemplate = (\n    <span className={classes.message}>\n      <Icon className={clsx(classes.icon, classes.iconStatus)} />\n      {message}\n    </span>\n  );\n\n  return (\n    <Snackbar open={isOpen} onClose={onClose} autoHideDuration={autoHideDuration}>\n      <SnackbarContent\n        className={clsx(classes[status], className)}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nNotification.SUCCESS = 'success';\nNotification.ERROR = 'error';\nNotification.INFO = 'info';\n\nNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconStatus: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  status: PropTypes.oneOf([Notification.SUCCESS, Notification.ERROR, Notification.INFO]),\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nNotification.defaultProps = {\n  message: null,\n  className: '',\n  status: Notification.INFO,\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(Notification);\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number,\n\n  code: PropTypes.string,\n  timestamp: PropTypes.string,\n  price: PropTypes.number,\n});\n\nexport const formValues = PropTypes.shape({\n  code: PropTypes.string,\n  timestamp: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n});\n\nexport const formTouched = PropTypes.shape({\n  code: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape()]),\n  timestamp: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape()]),\n  price: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape()]),\n});\n\nexport const formErrors = PropTypes.shape({\n  code: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n  timestamp: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n});\n","import enLocale from 'date-fns/locale/en-US';\n\nexport default {\n  en: enLocale,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialogTrigger extends PureComponent {\n  static CONFIRM = 'CONFIRM';\n\n  static DISCARD = 'DISCARD';\n\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.discard = this.discard.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  handleOpen() {\n    this.setState(() => ({\n      open: true,\n    }));\n  }\n\n  handleClose(action) {\n    const { onCloseDialog } = this.props;\n    this.setState(() => ({\n      open: false,\n    }));\n    onCloseDialog(action);\n  }\n\n  discard() {\n    this.handleClose(ConfirmationDialogTrigger.DISCARD);\n  }\n\n  confirm() {\n    this.handleClose(ConfirmationDialogTrigger.CONFIRM);\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      dialog: { title, description, confirmLabel, discardLabel },\n      Renderer,\n    } = this.props;\n    return (\n      <div>\n        <Renderer onClick={this.handleOpen} />\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"confirmation-dialog-title\"\n          aria-describedby=\"confirmation-dialog-description\"\n        >\n          <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"confirmation-dialog-description\">\n              {description}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.discard} autoFocus>\n              {discardLabel}\n            </Button>\n            <Button onClick={this.confirm} color=\"primary\">\n              {confirmLabel}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nConfirmationDialogTrigger.propTypes = {\n  dialog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    confirmLabel: PropTypes.string.isRequired,\n    discardLabel: PropTypes.string.isRequired,\n  }).isRequired,\n  onCloseDialog: PropTypes.func.isRequired,\n  Renderer: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n};\n","import 'date-fns';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { formValues, formTouched, formErrors } from 'components/__types__/ticket';\nimport { withFormik } from 'formik';\nimport { withTranslation } from 'react-i18next';\nimport { withStyles } from '@material-ui/core/styles';\nimport { compose } from 'recompose';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport dateFnsLocales from 'i18n/dateFnsLocales';\nimport ConfirmationDialogTrigger from 'components/common/ConfirmationDialogTrigger';\n\nconst styles = (theme) => ({\n  root: {\n    margin: theme.spacing(3),\n  },\n  textField: {\n    width: '100%',\n  },\n});\nclass TicketForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleConfirmationDialogAction = this.handleConfirmationDialogAction.bind(this);\n  }\n\n  handleConfirmationDialogAction(action) {\n    const { onDelete, values } = this.props;\n    switch (action) {\n      case ConfirmationDialogTrigger.CONFIRM: {\n        onDelete(values);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit: formikHandleSubmit,\n      onDelete,\n      onCancelEditing,\n      isSubmitting,\n      setFieldValue,\n      t,\n      i18n,\n    } = this.props;\n\n    const handleDateChange = (field) => (value) => {\n      setFieldValue(field, value);\n    };\n\n    const dateTimeLabelFn = (date) => (date ? new Date(date).toLocaleString(i18n.language) : '');\n    const getHelperText = (field) => (errors[field] && touched[field] ? errors[field] : '');\n\n    const handleSubmit = (e) => {\n      e.stopPropagation(); // avoids double submission caused by react-shadow-dom-retarget-events\n      formikHandleSubmit(e);\n    };\n\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={dateFnsLocales[i18n.language]}>\n        <form onSubmit={handleSubmit} className={classes.root} data-testid=\"ticket-form\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"ticket-code\"\n                error={errors.code && touched.code}\n                helperText={getHelperText('code')}\n                className={classes.textField}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.code}\n                name=\"code\"\n                label={t('entities.ticket.code')}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <DateTimePicker\n                id=\"ticket-timestamp\"\n                error={errors.timestamp && touched.timestamp}\n                helperText={getHelperText('timestamp')}\n                className={classes.textField}\n                onChange={handleDateChange('timestamp')}\n                value={values.timestamp}\n                labelFunc={dateTimeLabelFn}\n                name=\"timestamp\"\n                label={t('entities.ticket.timestamp')}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"ticket-price\"\n                error={errors.price && touched.price}\n                helperText={getHelperText('price')}\n                className={classes.textField}\n                type=\"number\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.price}\n                name=\"price\"\n                label={t('entities.ticket.price')}\n              />\n            </Grid>\n            {onDelete && (\n              <ConfirmationDialogTrigger\n                onCloseDialog={this.handleConfirmationDialogAction}\n                dialog={{\n                  title: t('entities.ticket.deleteDialog.title'),\n                  description: t('entities.ticket.deleteDialog.description'),\n                  confirmLabel: t('common.yes'),\n                  discardLabel: t('common.no'),\n                }}\n                Renderer={({ onClick }) => (\n                  <Button onClick={onClick} disabled={isSubmitting}>\n                    {t('common.delete')}\n                  </Button>\n                )}\n              />\n            )}\n\n            <Button onClick={onCancelEditing} disabled={isSubmitting} data-testid=\"cancel-btn\">\n              {t('common.cancel')}\n            </Button>\n\n            <Button type=\"submit\" color=\"primary\" disabled={isSubmitting} data-testid=\"submit-btn\">\n              {t('common.save')}\n            </Button>\n          </Grid>\n        </form>\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n\nTicketForm.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    textField: PropTypes.string,\n    submitButton: PropTypes.string,\n    button: PropTypes.string,\n    downloadAnchor: PropTypes.string,\n  }),\n  values: formValues,\n  touched: formTouched,\n  errors: formErrors,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  onCancelEditing: PropTypes.func,\n  isSubmitting: PropTypes.bool.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({ language: PropTypes.string }).isRequired,\n};\n\nTicketForm.defaultProps = {\n  onCancelEditing: () => {},\n  classes: {},\n  values: {},\n  touched: {},\n  errors: {},\n  onDelete: null,\n};\n\nconst emptyTicket = {\n  code: '',\n  timestamp: null,\n  price: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  code: Yup.string(),\n  timestamp: Yup.date().nullable(),\n  price: Yup.number(),\n});\n\nconst formikBag = {\n  mapPropsToValues: ({ ticket }) => ticket || emptyTicket,\n\n  enableReinitialize: true,\n\n  validationSchema,\n\n  handleSubmit: (values, { setSubmitting, props: { onSubmit } }) => {\n    onSubmit(values);\n    setSubmitting(false);\n  },\n\n  displayName: 'TicketForm',\n};\n\nexport default compose(\n  withStyles(styles, { withTheme: true }),\n  withTranslation(),\n  withFormik(formikBag)\n)(TicketForm);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nimport keycloakType from 'components/__types__/keycloak';\nimport withKeycloak from 'auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from 'auth/KeycloakViews';\nimport { apiTicketGet, apiTicketDelete, apiTicketPut } from 'api/tickets';\nimport Notification from 'components/common/Notification';\nimport TicketForm from 'components/TicketForm';\n\nclass TicketEditFormContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notificationMessage: null,\n      notificationStatus: null,\n    };\n\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak, id } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n    const changedId = id && id !== prevProps.id;\n\n    if (authenticated && (changedId || changedAuth)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const { keycloak, id, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated && id) {\n      try {\n        const ticket = await apiTicketGet(serviceUrl, id);\n        this.setState(() => ({\n          ticket,\n        }));\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  closeNotification() {\n    this.setState(() => ({\n      notificationMessage: null,\n    }));\n  }\n\n  async handleSubmit(ticket) {\n    const { t, onUpdate, keycloak, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n        const updatedTicket = await apiTicketPut(serviceUrl, ticket);\n        onUpdate(updatedTicket);\n\n        this.setState({\n          ticket: updatedTicket,\n          notificationMessage: t('common.dataSaved'),\n          notificationStatus: Notification.SUCCESS,\n        });\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  async handleDelete(ticket) {\n    const { t, onDelete, keycloak, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n        await apiTicketDelete(serviceUrl, ticket.id);\n        onDelete(ticket);\n        this.setState({\n          ticket: null,\n          notificationMessage: t('common.dataDeleted'),\n          notificationStatus: Notification.SUCCESS,\n        });\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  handleError(err) {\n    const { t, onError } = this.props;\n    onError(err);\n    this.setState(() => ({\n      notificationMessage: t('error.dataLoading'),\n      notificationStatus: Notification.ERROR,\n    }));\n  }\n\n  render() {\n    const { keycloak, onCancelEditing, t } = this.props;\n    const { notificationMessage, notificationStatus, ticket } = this.state;\n\n    let form;\n    if (typeof ticket === 'undefined') {\n      form = t('entities.ticket.notFound');\n    } else if (ticket === null) {\n      form = t('entities.ticket.deleted');\n    } else {\n      form = (\n        <TicketForm\n          ticket={ticket}\n          onSubmit={this.handleSubmit}\n          onCancelEditing={onCancelEditing}\n          onDelete={this.handleDelete}\n        />\n      );\n    }\n    return (\n      <>\n        <UnauthenticatedView keycloak={keycloak}>\n          {t('common.notAuthenticated')}\n        </UnauthenticatedView>\n        <AuthenticatedView keycloak={keycloak}>{form}</AuthenticatedView>\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </>\n    );\n  }\n}\n\nTicketEditFormContainer.propTypes = {\n  id: PropTypes.string.isRequired,\n  onCancelEditing: PropTypes.func,\n  onError: PropTypes.func,\n  onUpdate: PropTypes.func,\n  onDelete: PropTypes.func,\n  t: PropTypes.func.isRequired,\n  keycloak: keycloakType.isRequired,\n  serviceUrl: PropTypes.string,\n};\n\nTicketEditFormContainer.defaultProps = {\n  onCancelEditing: () => {},\n  onDelete: () => {},\n  onUpdate: () => {},\n  onError: () => {},\n  serviceUrl: '',\n};\n\nexport default withKeycloak(withTranslation()(TicketEditFormContainer));\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nimport keycloakType from 'components/__types__/keycloak';\nimport withKeycloak from 'auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from 'auth/KeycloakViews';\nimport { apiTicketPost } from 'api/tickets';\nimport Notification from 'components/common/Notification';\nimport TicketForm from 'components/TicketForm';\n\nclass TicketAddFormContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notificationMessage: null,\n      notificationStatus: null,\n    };\n\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  closeNotification() {\n    this.setState({\n      notificationMessage: null,\n    });\n  }\n\n  async handleSubmit(ticket) {\n    const { t, onCreate, keycloak, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n        const createdTicket = await apiTicketPost(serviceUrl, ticket);\n        onCreate(createdTicket);\n        this.setState({\n          notificationMessage: t('common.dataSaved'),\n          notificationStatus: Notification.SUCCESS,\n        });\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  handleError(err) {\n    const { onError, t } = this.props;\n    onError(err);\n    this.setState({\n      notificationMessage: t('error.dataLoading'),\n      notificationStatus: Notification.ERROR,\n    });\n  }\n\n  render() {\n    const { keycloak, onCancelEditing, t } = this.props;\n    const { notificationMessage, notificationStatus } = this.state;\n\n    return (\n      <>\n        <UnauthenticatedView keycloak={keycloak}>\n          {t('common.notAuthenticated')}\n        </UnauthenticatedView>\n        <AuthenticatedView keycloak={keycloak}>\n          <TicketForm onSubmit={this.handleSubmit} onCancelEditing={onCancelEditing} />\n        </AuthenticatedView>\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </>\n    );\n  }\n}\n\nTicketAddFormContainer.propTypes = {\n  onError: PropTypes.func,\n  onCancelEditing: PropTypes.func,\n  onCreate: PropTypes.func,\n  t: PropTypes.func.isRequired,\n  keycloak: keycloakType.isRequired,\n  serviceUrl: PropTypes.string,\n};\n\nTicketAddFormContainer.defaultProps = {\n  onError: () => {},\n  onCancelEditing: () => {},\n  onCreate: () => {},\n  serviceUrl: '',\n};\n\nexport default withKeycloak(withTranslation()(TicketAddFormContainer));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport retargetEvents from 'react-shadow-dom-retarget-events';\n\nimport { StylesProvider, ThemeProvider, jssPreset } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport { create as jssCreate } from 'jss';\n\nimport KeycloakContext from 'auth/KeycloakContext';\nimport setLocale from 'i18n/setLocale';\nimport {\n  createWidgetEventPublisher,\n  subscribeToWidgetEvent,\n  subscribeToWidgetEvents,\n} from 'helpers/widgetEvents';\nimport {\n  INPUT_EVENT_TYPES,\n  OUTPUT_EVENT_TYPES,\n  KEYCLOAK_EVENT_TYPE,\n} from 'custom-elements/widgetEventTypes';\nimport TicketEditFormContainer from 'components/TicketEditFormContainer';\nimport TicketAddFormContainer from 'components/TicketAddFormContainer';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  id: 'id',\n  hidden: 'hidden',\n  locale: 'locale',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketFormElement extends HTMLElement {\n  jss;\n\n  container;\n\n  mountPoint;\n\n  keycloak = getKeycloakInstance();\n\n  unsubscribeFromWidgetEvents;\n\n  unsubscribeFromKeycloakEvent;\n\n  defaultEventHandlerDisabled;\n\n  onCreate = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.create);\n\n  onCancelEditing = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.cancelEditing);\n\n  onDelete = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.delete);\n\n  onUpdate = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.update);\n\n  onErrorCreate = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.errorCreate);\n\n  onErrorUpdate = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.errorUpdate);\n\n  muiTheme;\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.container || oldValue === newValue) {\n      return;\n    }\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (name === ATTRIBUTES.disableDefaultEventHandler) {\n      this.onToggleDisableDefaultEvent();\n    }\n    this.render();\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    this.container.appendChild(this.mountPoint);\n\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(this.container);\n\n    this.jss = jssCreate({\n      ...jssPreset(),\n      insertionPoint: this.container,\n    });\n\n    this.muiTheme = createMuiTheme({\n      props: {\n        MuiDialog: {\n          container: this.mountPoint,\n        },\n        MuiPopover: {\n          container: this.mountPoint,\n        },\n      },\n    });\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.onToggleDisableDefaultEvent();\n\n    this.render();\n\n    retargetEvents(shadowRoot);\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromWidgetEvents) {\n      this.unsubscribeFromWidgetEvents();\n    }\n    if (this.unsubscribeFromKeycloakEvent) {\n      this.unsubscribeFromKeycloakEvent();\n    }\n  }\n\n  defaultWidgetEventHandler() {\n    return (evt) => {\n      const {\n        tableAdd,\n        cancelEditing,\n        create,\n        edit,\n        delete: performDelete,\n        tableSelect,\n        update,\n      } = INPUT_EVENT_TYPES;\n      const { id } = ATTRIBUTES;\n      switch (evt.type) {\n        case tableAdd: {\n          this.setAttribute(id, '');\n          break;\n        }\n        case edit: {\n          this.hidden = false;\n          this.setAttribute(id, evt.detail.payload.id);\n          break;\n        }\n        case create:\n        case cancelEditing:\n        case update: {\n          this.hidden = true;\n          break;\n        }\n        case performDelete: {\n          this.hidden = true;\n          this.setAttribute(id, '');\n          break;\n        }\n        case tableSelect: {\n          this.setAttribute(id, evt.detail.payload.id);\n          break;\n        }\n        default:\n          throw new Error(`Unsupported event: ${evt.type}`);\n      }\n    };\n  }\n\n  onToggleDisableDefaultEvent() {\n    const disableEventHandler = this.getAttribute(ATTRIBUTES.disableDefaultEventHandler) === 'true';\n\n    if (disableEventHandler !== this.defaultEventHandlerDisabled) {\n      if (!disableEventHandler) {\n        const defaultWidgetEventHandler = this.defaultWidgetEventHandler();\n\n        this.unsubscribeFromWidgetEvents = subscribeToWidgetEvents(\n          Object.values(INPUT_EVENT_TYPES),\n          defaultWidgetEventHandler\n        );\n      } else {\n        if (this.unsubscribeFromWidgetEvents) {\n          this.unsubscribeFromWidgetEvents();\n        }\n        if (this.unsubscribeFromKeycloakEvent) {\n          this.unsubscribeFromKeycloakEvent();\n        }\n      }\n      this.defaultEventHandlerDisabled = disableEventHandler;\n    }\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    const hidden = this.getAttribute(ATTRIBUTES.hidden) === 'true';\n    if (hidden) {\n      ReactDOM.render(<></>);\n      return;\n    }\n\n    const locale = this.getAttribute(ATTRIBUTES.locale);\n    setLocale(locale);\n\n    const id = this.getAttribute(ATTRIBUTES.id);\n\n    const FormContainer = id\n      ? React.createElement(\n          TicketEditFormContainer,\n          { id, onUpdate: this.onUpdate, onError: this.onErrorUpdate, serviceUrl: serviceUrl },\n          null\n        )\n      : React.createElement(\n          TicketAddFormContainer,\n          { onCreate: this.onCreate, onError: this.onErrorCreate, serviceUrl: serviceUrl },\n          null\n        );\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <StylesProvider jss={this.jss}>\n          <ThemeProvider theme={this.muiTheme}>{FormContainer}</ThemeProvider>\n        </StylesProvider>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('ticket-form', TicketFormElement);\n"],"sourceRoot":""}